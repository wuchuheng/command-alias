name: Release

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - dev
      - main

jobs:
  wind32:
    name: Build windows maker file.
    runs-on: windows-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14

      - name: Install dependencies
        run: npm ci

      - name: Build for windows
        run: npm run make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wind32
          path: |
            out/make/**/*.exe
  linux:
    name: Build Linux maker file.
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Install OS dependencies
        run: sudo apt install dpkg fakeroot rpm

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14

      - name: Install dependencies
        run: npm ci

      - name: Build for windows
        run: npm run make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            out/make/**/*.deb
            out/make/**/*.rpm
  macOS:
    name: Build macOS maker file.
    runs-on: macos-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14

      - name: Install dependencies
        run: npm ci

      - name: Build for windows
        run: npm run make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macOS
          path: |
            out/make/*.dmg

  release:
    name: 'Create Release'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: [macOS, wind32, linux]

    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: wind32

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: linux

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: macOS

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref_name }}
          body: Automated release for ${{ github.ref_name }}
          files: |
            out/make/*.dmg
            out/make/*.deb
            out/make/*.rpm
            out/make/*.AppImage

  # Remove all cache files wether the jobs complected or not
